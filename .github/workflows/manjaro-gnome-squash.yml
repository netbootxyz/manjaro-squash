name: manjaro-gnome-current

on:
  push:
    branches:
      - gnome-current

env:
  GITHUB_ENDPOINT: netbootxyz/manjaro-squash
  DISCORD_HOOK_URL: ${{ secrets.DISCORD_HOOK_URL }}
  GITHUB_SHA: ${{ github.sha }}
  BUILD_TYPE: initrd_patch
  DEBIAN_FRONTEND: noninteractive
  CI_TOKEN: ${{ secrets.CI_TOKEN }}
  
jobs:
  version-checker:
    name: Version Checker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Retrieve latest version from upstream and set tags
      run: |
        export EXTERNAL_VERSION=$(curl -sL https://manjaro.org/downloads/official/gnome/ |awk -F '(manjaro-gnome-|.iso)' '/manjaro-gnome-/ {print $2;exit}')
        echo "EXTERNAL_VERSION=$EXTERNAL_VERSION" >> $GITHUB_ENV
        wget https://raw.githubusercontent.com/netbootxyz/build-pipelines/master/build.sh && chmod +x build.sh
        export GITHUB_TAG=${EXTERNAL_VERSION}-$(echo ${GITHUB_SHA} | cut -c1-8)
        echo "GITHUB_TAG=$GITHUB_TAG" >> $GITHUB_ENV

    - name: Compare tag
      run: |
        echo "NEW_VERSION=true" >> $GITHUB_ENV
        ./build.sh compare ${GITHUB_TAG} || echo "NEW_VERSION=false" >> $GITHUB_ENV

    - name: Build if newer tag is available
      if: env.NEW_VERSION == 'true'
      run: |
        ./build.sh build ${BUILD_TYPE}
        git tag ${GITHUB_TAG}

    - name: Create Release and Upload Assets
      if: env.NEW_VERSION == 'true'
      uses: svenstaro/upload-release-action@v2
      with:
        file: buildout/*
        file_glob: true
        overwrite: true
        prerelease: false
        release_name: ${GITHUB_TAG}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${GITHUB_TAG}

    - name: Generate endpoints
      if: env.NEW_VERSION == 'true'
      run: |
        git config --global user.name netboot-ci
        git config --global user.email netboot-ci@netboot.xyz
        ./build.sh endpoints $GITHUB_TAG

    - name: Notify Discord on failure
      if: failure()
      run: |
        ./build.sh discord failure

    - name: Notify Discord on completion
      if: env.NEW_VERSION == 'true' && success()
      run: |
        ./build.sh discord success
